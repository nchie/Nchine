const char *vertexShaderSourcePerspectiveTexture =
        "#version 330 core\n"
                "layout (std140) uniform shader_data\n"
                "{ \n"
                "    mat4 view_projection;\n"
                "    mat4 prev_view_projection;\n"
                "    mat4 projection;\n"
                "    mat4 view;\n"
                "    mat4 inverse_view;"
                "};"
                "layout (location = 0) in vec3 aPos;\n"
                "layout (location = 1) in vec2 aTexCoord;\n"
                "\n"
                "out vec2 TexCoord;\n"
                "\n"
                "uniform mat4 model;\n"
                "\n"
                "void main()\n"
                "{\n"
                "   gl_Position = view_projection * model * vec4(aPos, 1.0f);\n"
                "   TexCoord = vec2(aTexCoord.x, aTexCoord.y);\n"
                "}";
const char *fragmentShaderSourcePerspectiveTexture =
        "#version 330 core\n"
                "layout (std140) uniform shader_data\n"
                "{ \n"
                "    mat4 view_projection;\n"
                "    mat4 prev_view_projection;\n"
                "    mat4 projection;\n"
                "    mat4 view;\n"
                "    mat4 inverse_view;"
                "};"
                "out vec4 FragColor;\n"
                "\n"
                "in vec2 TexCoord;\n"
                "\n"
                "// texture samplers\n"
                "uniform sampler2D texture1;\n"
                "uniform sampler2D texture2;\n"
                "\n"
                "void main()\n"
                "{\n"
                "       // linearly interpolate between both textures (80% container, 20% awesomeface)\n"
                "       FragColor = mix(texture(texture2, TexCoord), texture(texture1, TexCoord), 0.05);\n"
                "}";